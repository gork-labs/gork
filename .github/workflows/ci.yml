name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # First job to dynamically determine modules
  setup:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4

      - id: set-modules
        name: Get modules from go.work
        run: |
          # Get modules from Makefile in JSON format
          MODULES=$(make list-modules FORMAT=json)
          echo "modules=$MODULES" >> $GITHUB_OUTPUT
          echo "Found modules: $MODULES"

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(needs.setup.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Test ${{ matrix.module }}
        run: |
          cd ${{ matrix.module }}
          go test ./... -v -race -coverprofile=coverage.out

      - name: Check coverage threshold
        run: |
          # Use the centralized coverage check script
          ./scripts/check-coverage.sh ${{ matrix.module }} 100

      - name: Upload coverage
        if: matrix.module != 'examples'
        uses: codecov/codecov-action@v5
        with:
          files: ./${{ matrix.module }}/coverage.out
          flags: ${{ matrix.module }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build tools
        run: make build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: bin/

  lint:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(needs.setup.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: golangci-lint ${{ matrix.module }}
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: ${{ matrix.module }}
          args: --timeout=5m
