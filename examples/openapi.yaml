openapi: 3.1.0
info:
    title: API
    version: 1.0.0
paths:
    /api/v1/auth/login:
        post:
            operationId: Login
            description: Login handles user login requests.
            tags:
                - auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
    /api/v1/users:
        get:
            operationId: ListUsers
            description: ListUsers handles listing all users.
            tags:
                - users
            security:
                - BearerAuth: []
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
        post:
            operationId: CreateUser
            description: CreateUser handles user creation requests.
            tags:
                - users
            security:
                - BasicAuth: []
            parameters:
                - name: return-to
                  in: query
                  required: false
                  schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
    /api/v1/users/{userId}:
        get:
            operationId: GetUser
            description: GetUser handles user retrieval requests.
            tags:
                - users
            security:
                - ApiKeyAuth: []
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
        put:
            operationId: UpdateUser
            description: UpdateUser handles user update requests.
            tags:
                - users
            security:
                - BearerAuth: []
            parameters:
                - name: X-User-Version
                  in: header
                  required: false
                  schema:
                    type: integer
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
        delete:
            operationId: DeleteUser
            description: DeleteUser handles user deletion requests.
            tags:
                - users
            parameters:
                - name: force
                  in: query
                  required: false
                  schema:
                    type: boolean
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoContentResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
    /api/v1/users/{userId}/payment-method:
        put:
            operationId: UpdateUserPaymentMethod
            description: UpdateUserPaymentMethod handles user payment method update requests.
            tags:
                - users
            security:
                - BearerAuth: []
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PaymentMethodRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoContentResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
    /api/v1/users/{userId}/preferences:
        put:
            operationId: UpdateUserPreferences
            description: UpdateUserPreferences handles user preferences update requests.
            tags:
                - users
            security:
                - BearerAuth: []
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserPreferencesRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NoContentResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
components:
    schemas:
        AdminUserResponse:
            type: object
            properties:
                UserResponse:
                    $ref: '#/components/schemas/UserResponse'
                createdAt:
                    type: string
                updatedAt:
                    type: string
            description: AdminUserResponse represents an admin user with additional fields.
        BankPaymentMethod:
            type: object
            properties:
                accountNumber:
                    type: string
                routingNumber:
                    type: string
                type:
                    type: string
            required:
                - type
                - accountNumber
                - routingNumber
            description: BankPaymentMethod returns the BankPaymentMethod value if present, nil otherwise.
        CreateUserRequest:
            type: object
            properties:
                username:
                    type: string
            required:
                - username
            description: CreateUserRequest represents the request body for creating a user.
        CreditCardPaymentMethod:
            type: object
            properties:
                cardNumber:
                    type: string
                type:
                    type: string
            required:
                - type
                - cardNumber
            description: CreditCardPaymentMethod returns the CreditCardPaymentMethod value if present, nil otherwise.
        ErrorResponse:
            type: object
            properties:
                details:
                    type: object
                error:
                    type: string
            required:
                - error
        ListUsersResponse:
            oneOf:
                - type: array
                  properties:
                    items:
                        $ref: '#/components/schemas/AdminUserResponse'
                - type: array
                  properties:
                    items:
                        $ref: '#/components/schemas/UserResponse'
            description: ListUsersResponse represents the response for listing users.
        LoginRequest:
            type: object
            properties:
                password:
                    type: string
                username:
                    type: string
            required:
                - username
                - password
            description: LoginRequest represents the request body for the login endpoint.
        LoginResponse:
            type: object
            properties:
                token:
                    type: string
            description: LoginResponse represents the response body for the login endpoint.
        NoContentResponse:
            type: object
        PaymentMethodRequest:
            oneOf:
                - $ref: '#/components/schemas/BankPaymentMethod'
                - $ref: '#/components/schemas/CreditCardPaymentMethod'
            description: PaymentMethodRequest is the request body which is a union of payment methods.
        Union2_BankPaymentMethod_CreditCardPaymentMethod:
            oneOf:
                - $ref: '#/components/schemas/BankPaymentMethod'
                - $ref: '#/components/schemas/CreditCardPaymentMethod'
        UpdateUserPreferencesRequest:
            type: object
            properties:
                paymentMethod:
                    $ref: '#/components/schemas/Union2_BankPaymentMethod_CreditCardPaymentMethod'
                primaryNotificationChannel:
                    type: string
                    enum:
                        - email
                        - sms
                        - push
            required:
                - paymentMethod
                - primaryNotificationChannel
            description: UpdateUserPreferencesRequest represents the request for updating user preferences.
        UpdateUserRequest:
            type: object
            properties:
                userID:
                    type: string
                username:
                    type: string
            required:
                - userID
                - username
            description: UpdateUserRequest represents the request body for updating a user.
        UserResponse:
            type: object
            properties:
                userID:
                    type: string
                username:
                    type: string
            description: UserResponse represents the response for user operations.
        ValidationErrorResponse:
            type: object
            properties:
                details:
                    type: object
                error:
                    type: string
            required:
                - error
    securitySchemes:
        ApiKeyAuth:
            type: apiKey
            in: header
            name: X-API-Key
        BasicAuth:
            type: http
            scheme: basic
        BearerAuth:
            type: http
            scheme: bearer
    responses:
        BadRequest:
            description: Bad Request - Validation failed
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ValidationErrorResponse'
        InternalServerError:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
        UnprocessableEntity:
            description: Unprocessable Entity - Request body could not be parsed
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
