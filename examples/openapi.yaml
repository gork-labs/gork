components:
    responses:
        BadRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ValidationErrorResponse'
            description: Bad Request - Validation failed
        InternalServerError:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
            description: Internal Server Error
        UnprocessableEntity:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
            description: Unprocessable Entity - Request body could not be parsed
    schemas:
        AdminUserType:
            description: AdminUserType represents admin user data structure.
            properties:
                createdAt:
                    description: CreatedAt is when the user was created
                    type: string
                updatedAt:
                    description: UpdatedAt is when the user was last updated
                    type: string
                userID:
                    description: UserID is the ID of the user
                    type: string
                username:
                    description: Username is the username of the user
                    type: string
            title: AdminUserType
            type: object
        BankOrCreditBody:
            title: BankOrCreditBody
            type: object
        BankPaymentMethod:
            description: BankPaymentMethod represents a bank account payment method.
            properties:
                accountNumber:
                    description: AccountNumber is the bank account number
                    type: string
                routingNumber:
                    description: RoutingNumber is the bank routing number
                    type: string
                type:
                    description: Type is the payment method type discriminator
                    type: string
            required:
                - type
                - accountNumber
                - routingNumber
            title: BankPaymentMethod
            type: object
        CreateUserBody:
            properties:
                username:
                    description: Username is the username of the user to create
                    type: string
            required:
                - username
            title: CreateUserBody
            type: object
        CreditCardPaymentMethod:
            description: CreditCardPaymentMethod represents a credit card payment method.
            properties:
                cardNumber:
                    description: CardNumber is the credit card number
                    type: string
                type:
                    description: Type is the payment method type discriminator
                    type: string
            required:
                - type
                - cardNumber
            title: CreditCardPaymentMethod
            type: object
        CustomerMetadata:
            description: CustomerMetadata represents customer-specific metadata for webhook events.
            properties:
                PlanType:
                    type: string
                UserID:
                    description: UserID is the ID of the user
                    type: string
            required:
                - UserID
            title: CustomerMetadata
            type: object
        DeleteUserBody:
            properties:
                userID:
                    description: UserID is the ID of the user to delete
                    type: string
            required:
                - userID
            title: DeleteUserBody
            type: object
        ErrorResponse:
            description: Generic error response structure
            properties:
                details:
                    description: Additional error details
                    type: object
                error:
                    description: Error message
                    type: string
            required:
                - error
            title: ErrorResponse
            type: object
        InvoiceMetadata:
            description: InvoiceMetadata represents invoice-specific metadata for webhook events.
            properties:
                BillingPeriod:
                    type: string
                SubscriptionID:
                    type: string
                UserID:
                    description: UserID is the ID of the user
                    type: string
            required:
                - UserID
                - SubscriptionID
            title: InvoiceMetadata
            type: object
        ListUsersResponse:
            description: ListUsersResponse represents the response for listing users.
            oneOf:
                - description: Array of AdminUserType
                  items:
                    $ref: '#/components/schemas/AdminUserType'
                  title: '[]AdminUserType'
                  type: array
                - description: Array of UserType
                  items:
                    $ref: '#/components/schemas/UserType'
                  title: '[]UserType'
                  type: array
            title: ListUsersResponse
        LoginResponse:
            description: LoginResponse represents the response body for the login endpoint.
            properties:
                token:
                    description: Token is the JWT token for the authenticated user
                    type: string
            title: LoginResponse
            type: object
        PaymentMetadata:
            description: PaymentMetadata represents example user-defined metadata types validated by the webhook dispatcher.
            properties:
                ProjectID:
                    type: string
                UserID:
                    description: UserID is the ID of the user
                    type: string
            required:
                - UserID
            title: PaymentMetadata
            type: object
        StripeWebhookErrorResponse:
            properties:
                Body:
                    properties:
                        Error:
                            type: string
                        Received:
                            type: boolean
                    type: object
            title: StripeWebhookErrorResponse
            type: object
        StripeWebhookRequest:
            properties:
                Body:
                    format: byte
                    type: string
                Headers:
                    properties:
                        Content-Type:
                            type: string
                        Stripe-Signature:
                            type: string
                    required:
                        - Stripe-Signature
                    type: object
            title: StripeWebhookRequest
            type: object
        StripeWebhookResponse:
            properties:
                Body:
                    properties:
                        Received:
                            type: boolean
                    type: object
            title: StripeWebhookResponse
            type: object
        UpdateUserBody:
            properties:
                userID:
                    description: UserID is the ID of the user to update
                    type: string
                username:
                    description: Username is the new username for the user
                    type: string
            required:
                - userID
                - username
            title: UpdateUserBody
            type: object
        UpdateUserPreferencesBody:
            properties:
                paymentMethod:
                    description: PaymentMethod contains the user's payment method
                    oneOf:
                        - $ref: '#/components/schemas/BankPaymentMethod'
                        - $ref: '#/components/schemas/CreditCardPaymentMethod'
                primaryNotificationChannel:
                    description: PrimaryNotificationChannel is the user's preferred notification channel
                    enum:
                        - email
                        - sms
                        - push
                    type: string
            required:
                - paymentMethod
                - primaryNotificationChannel
            title: UpdateUserPreferencesBody
            type: object
        UserType:
            description: UserType represents user data structure.
            properties:
                userID:
                    description: UserID is the ID of the user
                    type: string
                username:
                    description: Username is the username of the user
                    type: string
            title: UserType
            type: object
        ValidationErrorResponse:
            description: Validation error response with field-level details
            properties:
                details:
                    description: Field-level validation errors (maps field names to arrays of error messages)
                    type: object
                error:
                    description: Error message
                    type: string
            required:
                - error
            title: ValidationErrorResponse
            type: object
    securitySchemes:
        ApiKeyAuth:
            in: header
            name: X-API-Key
            type: apiKey
        BasicAuth:
            scheme: basic
            type: http
        BearerAuth:
            scheme: bearer
            type: http
info:
    title: Example API
    version: 1.0.0
openapi: 3.1.0
paths:
    /api/v1/auth/login:
        post:
            description: Login handles user login requests.
            operationId: Login
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                    description: Success
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
            tags:
                - auth
    /api/v1/users:
        get:
            description: ListUsers handles listing all users.
            operationId: ListUsers
            parameters:
                - description: Limit is the maximum number of users to return
                  in: query
                  name: limit
                  required: false
                  schema:
                    type: integer
                - description: Offset is the number of users to skip
                  in: query
                  name: offset
                  required: false
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                    description: Success
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
            security:
                - BearerAuth: []
            tags:
                - users
        post:
            description: CreateUser handles user creation requests.
            operationId: CreateUser
            parameters:
                - description: ReturnTo specifies where to redirect after user creation
                  in: query
                  name: return-to
                  required: false
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserBody'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserType'
                    description: Success
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
            security:
                - BasicAuth: []
            tags:
                - users
    /api/v1/users/{userId}:
        delete:
            description: DeleteUser handles user deletion requests.
            operationId: DeleteUser
            parameters:
                - description: UserID is the ID of the user to delete
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
                - description: Force specifies whether to force deletion
                  in: query
                  name: force
                  required: false
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteUserBody'
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
            tags:
                - users
        get:
            description: GetUser handles user retrieval requests.
            operationId: GetUser
            parameters:
                - description: UserID is the ID of the user to retrieve
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserType'
                    description: Success
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
            security:
                - ApiKeyAuth: []
            tags:
                - users
        put:
            description: UpdateUser handles user update requests.
            operationId: UpdateUser
            parameters:
                - description: UserID is the ID of the user to update
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
                - description: Version specifies the user version for concurrency control
                  in: header
                  name: X-User-Version
                  required: false
                  schema:
                    type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserBody'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserType'
                    description: Success
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
            security:
                - BearerAuth: []
            tags:
                - users
    /api/v1/users/{userId}/payment-method:
        put:
            description: UpdateUserPaymentMethod handles user payment method update requests.
            operationId: UpdateUserPaymentMethod
            parameters:
                - in: path
                  name: userId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BankOrCreditBody'
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
            security:
                - BearerAuth: []
            tags:
                - users
    /api/v1/users/{userId}/preferences:
        put:
            description: UpdateUserPreferences handles user preferences update requests.
            operationId: UpdateUserPreferences
            parameters:
                - description: UserID is the ID of the user whose preferences are being updated
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserPreferencesBody'
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
            security:
                - BearerAuth: []
            tags:
                - users
    /webhooks/stripe:
        post:
            description: Webhook endpoint that receives events from external services
            operationId: StripeWebhook
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StripeWebhookRequest'
                description: Webhook event payload
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StripeWebhookResponse'
                    description: Webhook processed successfully
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StripeWebhookErrorResponse'
                    description: Invalid webhook payload or signature
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
            summary: Webhook endpoint for StripeWebhook
            tags:
                - webhooks
                - stripe
            x-webhook-events:
                - event: customer.created
                  operationId: HandleCustomerCreated
                  userPayloadSchema:
                    $ref: '#/components/schemas/CustomerMetadata'
                - event: invoice.paid
                  operationId: HandleInvoicePaid
                  userPayloadSchema:
                    $ref: '#/components/schemas/InvoiceMetadata'
                - event: payment_intent.payment_failed
                  operationId: HandlePaymentIntentFailed
                  userPayloadSchema:
                    $ref: '#/components/schemas/PaymentMetadata'
                - event: payment_intent.succeeded
                  operationId: HandlePaymentIntentSucceeded
                  userPayloadSchema:
                    $ref: '#/components/schemas/PaymentMetadata'
            x-webhook-provider:
                docs: https://stripe.com/docs/webhooks
                name: Stripe
                website: https://stripe.com
