openapi: 3.1.0
info:
    title: Example API
    version: 1.0.0
paths:
    /api/v1/auth/login:
        post:
            operationId: Login
            description: Login handles user login requests.
            tags:
                - auth
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            alias:
                                $ref: '#/components/schemas/LoginRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                alias:
                                    $ref: '#/components/schemas/LoginResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
    /api/v1/users:
        get:
            operationId: ListUsers
            description: ListUsers handles listing all users.
            tags:
                - users
            security:
                - BearerAuth: []
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                alias:
                                    $ref: '#/components/schemas/ListUsersResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
        post:
            operationId: CreateUser
            description: CreateUser handles user creation requests.
            tags:
                - users
            security:
                - BasicAuth: []
            parameters:
                - name: return-to
                  in: query
                  required: false
                  schema:
                    type: string
                    alias: {}
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            alias:
                                $ref: '#/components/schemas/CreateUserRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                alias:
                                    $ref: '#/components/schemas/UserResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
    /api/v1/users/{userId}:
        get:
            operationId: GetUser
            description: GetUser handles user retrieval requests.
            tags:
                - users
            security:
                - ApiKeyAuth: []
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                    alias: {}
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                alias:
                                    $ref: '#/components/schemas/UserResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
        put:
            operationId: UpdateUser
            description: UpdateUser handles user update requests.
            tags:
                - users
            security:
                - BearerAuth: []
            parameters:
                - name: X-User-Version
                  in: header
                  required: false
                  schema:
                    type: integer
                    alias: {}
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                    alias: {}
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            alias:
                                $ref: '#/components/schemas/UpdateUserRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                alias:
                                    $ref: '#/components/schemas/UserResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
        delete:
            operationId: DeleteUser
            description: DeleteUser handles user deletion requests.
            tags:
                - users
            parameters:
                - name: force
                  in: query
                  required: false
                  schema:
                    type: boolean
                    alias: {}
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                    alias: {}
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                alias:
                                    $ref: '#/components/schemas/NoContentResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
    /api/v1/users/{userId}/payment-method:
        put:
            operationId: UpdateUserPaymentMethod
            description: UpdateUserPaymentMethod handles user payment method update requests.
            tags:
                - users
            security:
                - BearerAuth: []
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                    alias: {}
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            alias:
                                $ref: '#/components/schemas/PaymentMethodRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                alias:
                                    $ref: '#/components/schemas/NoContentResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
    /api/v1/users/{userId}/preferences:
        put:
            operationId: UpdateUserPreferences
            description: UpdateUserPreferences handles user preferences update requests.
            tags:
                - users
            security:
                - BearerAuth: []
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                    alias: {}
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            alias:
                                $ref: '#/components/schemas/UpdateUserPreferencesRequest'
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                alias:
                                    $ref: '#/components/schemas/NoContentResponse'
                "400":
                    $ref: '#/components/responses/BadRequest'
                "422":
                    $ref: '#/components/responses/UnprocessableEntity'
                "500":
                    $ref: '#/components/responses/InternalServerError'
components:
    schemas:
        AdminUserResponse:
            type: object
            alias:
                title: AdminUserResponse
                properties:
                    createdAt:
                        type: string
                        alias: {}
                    updatedAt:
                        type: string
                        alias: {}
                    userID:
                        type: string
                        alias: {}
                    username:
                        type: string
                        alias: {}
                description: AdminUserResponse represents an admin user with additional fields.
        BankPaymentMethod:
            type: object
            alias:
                title: BankPaymentMethod
                properties:
                    accountNumber:
                        type: string
                        alias:
                            description: AccountNumber is the bank account number
                    routingNumber:
                        type: string
                        alias:
                            description: RoutingNumber is the bank routing number
                    type:
                        type: string
                        alias:
                            description: Type is the payment method type discriminator
                required:
                    - type
                    - accountNumber
                    - routingNumber
                description: BankPaymentMethod represents a bank account payment method.
        CreateUserRequest:
            type: object
            alias:
                title: CreateUserRequest
                properties:
                    username:
                        type: string
                        alias:
                            description: Username is the username of the user to create
                required:
                    - username
                description: CreateUserRequest represents the request body for creating a user.
        CreditCardPaymentMethod:
            type: object
            alias:
                title: CreditCardPaymentMethod
                properties:
                    cardNumber:
                        type: string
                        alias:
                            description: CardNumber is the credit card number
                    type:
                        type: string
                        alias:
                            description: Type is the payment method type discriminator
                required:
                    - type
                    - cardNumber
                description: CreditCardPaymentMethod represents a credit card payment method.
        ErrorResponse:
            type: object
            alias:
                properties:
                    details:
                        type: object
                        alias: {}
                    error:
                        type: string
                        alias: {}
                required:
                    - error
        ListUsersResponse:
            alias:
                oneOf:
                    - type: array
                      alias:
                        title: '[]AdminUserResponse'
                        description: Array of AdminUserResponse
                        items:
                            alias:
                                $ref: '#/components/schemas/AdminUserResponse'
                    - type: array
                      alias:
                        title: '[]UserResponse'
                        description: Array of UserResponse
                        items:
                            alias:
                                $ref: '#/components/schemas/UserResponse'
                description: ListUsersResponse represents the response for listing users.
        LoginRequest:
            type: object
            alias:
                title: LoginRequest
                properties:
                    password:
                        type: string
                        alias:
                            description: Password is the user's password
                    username:
                        type: string
                        alias:
                            description: Username is the user's username
                required:
                    - username
                    - password
                description: LoginRequest represents the request body for the login endpoint.
        LoginResponse:
            type: object
            alias:
                title: LoginResponse
                properties:
                    token:
                        type: string
                        alias:
                            description: Token is the JWT token for the authenticated user
                description: LoginResponse represents the response body for the login endpoint.
        NoContentResponse:
            type: object
            alias:
                title: NoContentResponse
        PaymentMethodRequest:
            alias:
                oneOf:
                    - alias:
                        $ref: '#/components/schemas/BankPaymentMethod'
                    - alias:
                        $ref: '#/components/schemas/CreditCardPaymentMethod'
                description: PaymentMethodRequest is the request body which is a union of payment methods.
        Union2_BankPaymentMethod_CreditCardPaymentMethod:
            alias:
                oneOf:
                    - alias:
                        $ref: '#/components/schemas/BankPaymentMethod'
                    - alias:
                        $ref: '#/components/schemas/CreditCardPaymentMethod'
        UpdateUserPreferencesRequest:
            type: object
            alias:
                title: UpdateUserPreferencesRequest
                properties:
                    paymentMethod:
                        alias:
                            $ref: '#/components/schemas/Union2_BankPaymentMethod_CreditCardPaymentMethod'
                            description: Preferences contains the user's updated preferences Payment methods are set in the "paymentMethods" field PaymentMethod contains the user's payment method
                    primaryNotificationChannel:
                        type: string
                        alias:
                            description: PrimaryNotificationChannel is the user's preferred notification channel
                            enum:
                                - email
                                - sms
                                - push
                required:
                    - paymentMethod
                    - primaryNotificationChannel
                description: UpdateUserPreferencesRequest represents the request for updating user preferences.
        UpdateUserRequest:
            type: object
            alias:
                title: UpdateUserRequest
                properties:
                    userID:
                        type: string
                        alias:
                            description: UserID is the ID of the user to update
                    username:
                        type: string
                        alias:
                            description: Username is the new username for the user
                required:
                    - userID
                    - username
                description: UpdateUserRequest represents the request body for updating a user.
        UserResponse:
            type: object
            alias:
                title: UserResponse
                properties:
                    userID:
                        type: string
                        alias:
                            description: UserID is the ID of the user
                    username:
                        type: string
                        alias:
                            description: Username is the username of the user
                description: UserResponse represents the response for user operations.
        ValidationErrorResponse:
            type: object
            alias:
                properties:
                    details:
                        type: object
                        alias: {}
                    error:
                        type: string
                        alias: {}
                required:
                    - error
    securitySchemes:
        ApiKeyAuth:
            type: apiKey
            in: header
            name: X-API-Key
        BasicAuth:
            type: http
            scheme: basic
        BearerAuth:
            type: http
            scheme: bearer
    responses:
        BadRequest:
            description: Bad Request - Validation failed
            content:
                application/json:
                    schema:
                        alias:
                            $ref: '#/components/schemas/ValidationErrorResponse'
        InternalServerError:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        alias:
                            $ref: '#/components/schemas/ErrorResponse'
        UnprocessableEntity:
            description: Unprocessable Entity - Request body could not be parsed
            content:
                application/json:
                    schema:
                        alias:
                            $ref: '#/components/schemas/ErrorResponse'
