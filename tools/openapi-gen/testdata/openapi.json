{
  "openapi": "3.1.0",
  "info": {
    "title": "API",
    "version": "1.0.0"
  },
  "paths": {
    "/basic/hello": {
      "get": {
        "operationId": "GetWithoutQueryParams",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWithoutQueryParamsResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "basic"
        ]
      }
    },
    "/basic/hello-with-json": {
      "post": {
        "operationId": "PostWithJsonBody",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWithJsonBodyReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWithJsonBodyResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "basic"
        ]
      }
    },
    "/basic/hello-with-json-and-query": {
      "post": {
        "operationId": "PostWithJsonBodyAndQueryParams",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWithJsonBodyAndQueryParamsReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWithJsonBodyAndQueryParamsResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "basic"
        ]
      }
    },
    "/basic/hello-with-query": {
      "get": {
        "operationId": "GetWithQueryParams",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWithQueryParamsResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "basic"
        ]
      }
    },
    "/unions/any-of-union2": {
      "post": {
        "operationId": "BodyWithWrapperHandler",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnyOfUnion2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BodyWithWrapperResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "unions"
        ]
      }
    },
    "/unions/any-of-without-wrapper": {
      "post": {
        "operationId": "BodyWithoutWrapperHandler",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnyOfWithoutWrapperReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BodyWithoutWrapperResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "unions"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AnyOfUnion2": {
        "type": "object",
        "properties": {
          "option": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Option1"
              },
              {
                "$ref": "#/components/schemas/Option2"
              }
            ]
          }
        }
      },
      "AnyOfWithoutWrapperReq": {
        "type": "object",
        "description": "AnyOfWithoutWrapperReq is a union type that accepts either Option1 or Option2\nThe actual implementation is in oneof_gen.go (auto-generated)"
      },
      "BodyWithWrapperResp": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "BodyWithoutWrapperResp": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "GetWithQueryParamsReq": {
        "type": "object"
      },
      "GetWithQueryParamsResp": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message is a personalized greeting message"
          }
        }
      },
      "GetWithoutQueryParamsReq": {
        "type": "object"
      },
      "GetWithoutQueryParamsResp": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message is a simple message"
          }
        }
      },
      "Option1": {
        "type": "object",
        "properties": {
          "option1Field": {
            "type": "string",
            "description": "Option1Field is the first option field"
          }
        }
      },
      "Option2": {
        "type": "object",
        "properties": {
          "option2Field": {
            "type": "string",
            "description": "Option2Field is the second option field"
          }
        }
      },
      "PaymentOptions": {
        "type": "object",
        "description": "PaymentOptions represents possible payment methods",
        "properties": {
          "option1": {
            "$ref": "#/components/schemas/Option1",
            "nullable": true
          },
          "option2": {
            "$ref": "#/components/schemas/Option2",
            "nullable": true
          }
        }
      },
      "PostWithJsonBodyAndQueryParamsReq": {
        "type": "object",
        "properties": {
          "age": {
            "type": "integer",
            "description": "Age is the age of the person to greet"
          }
        }
      },
      "PostWithJsonBodyAndQueryParamsResp": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message is a personalized greeting message"
          }
        }
      },
      "PostWithJsonBodyReq": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name is the name to greet"
          }
        }
      },
      "PostWithJsonBodyResp": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message is a personalized greeting message"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "basic",
      "description": "Operations related to basic"
    },
    {
      "name": "unions",
      "description": "Operations related to unions"
    }
  ]
}